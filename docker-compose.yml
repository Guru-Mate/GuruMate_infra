version: "3.9"

networks:
  app-net: {}

services:
  db:
    image: postgres:16
    container_name: GuruMate_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: gurumate
      POSTGRES_PASSWORD: gurumate_pw
      POSTGRES_DB: gurumate
      TZ: Asia/Seoul
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gurumate -d gurumate -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks: [app-net]

  main_backend:
    build: ../GuruMate_main_backend
    container_name: GuruMate_main_backend
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker              # ← 컨테이너용 프로파일
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/gurumate
      SPRING_DATASOURCE_USERNAME: gurumate
      SPRING_DATASOURCE_PASSWORD: gurumate_pw
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks: [app-net]


#  admin_backend:
#    build: ./admin-backend
#    container_name: GuruMate_admin_backend
#    restart: unless-stopped
#    environment:
#      SPRING_PROFILES_ACTIVE: dev
#      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/gurumate
#      SPRING_DATASOURCE_USERNAME: gurumate
#      SPRING_DATASOURCE_PASSWORD: gurumate_pw
#    ports:
#      - "8081:8080"
#    depends_on:
#      db:
#        condition: service_healthy
#
  main_frontend:
    build:
      context: ../GuruMate_main_frontend # 프론트엔드 프로젝트 경로
      dockerfile: Dockerfile
    container_name: GuruMate_main_frontend
    restart: unless-stopped
    ports:
      - "3000:80" # 로컬 3000번 포트 -> 컨테이너 80번 포트 (Nginx 기본 포트)
    depends_on:
      - main_backend # 백엔드가 실행된 후 프론트가 실행되도록 설정
    networks: [app-net]

volumes:
  db_data:
